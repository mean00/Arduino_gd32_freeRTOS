--- a/src/src/osal/osal_freertos.h.org	2022-04-13 08:18:51.956162507 +0200
+++ b/src/src/osal/osal_freertos.h	2022-04-13 08:32:07.048970225 +0200
@@ -53,7 +53,8 @@
 
 static inline osal_semaphore_t osal_semaphore_create(osal_semaphore_def_t* semdef)
 {
-  return xSemaphoreCreateBinaryStatic(semdef);
+  // MEANX return xSemaphoreCreateBinaryStatic(semdef);
+  return xSemaphoreCreateBinary();
 }
 
 static inline bool osal_semaphore_post(osal_semaphore_t sem_hdl, bool in_isr)
@@ -68,7 +69,6 @@
     BaseType_t res = xSemaphoreGiveFromISR(sem_hdl, &xHigherPriorityTaskWoken);
 
 #if CFG_TUSB_MCU == OPT_MCU_ESP32S2 || CFG_TUSB_MCU == OPT_MCU_ESP32S3
-    // not needed after https://github.com/espressif/esp-idf/commit/c5fd79547ac9b7bae06fa660e9f814d18d3390b7
     if ( xHigherPriorityTaskWoken ) portYIELD_FROM_ISR();
 #else
     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
@@ -92,12 +92,14 @@
 //--------------------------------------------------------------------+
 // MUTEX API (priority inheritance)
 //--------------------------------------------------------------------+
+//MEANX typedef StaticSemaphore_t osal_mutex_def_t;
 typedef StaticSemaphore_t osal_mutex_def_t;
 typedef SemaphoreHandle_t osal_mutex_t;
 
 static inline osal_mutex_t osal_mutex_create(osal_mutex_def_t* mdef)
 {
-  return xSemaphoreCreateMutexStatic(mdef);
+  //return xSemaphoreCreateMutexStatic(mdef);
+  return xSemaphoreCreateMutex();
 }
 
 static inline bool osal_mutex_lock (osal_mutex_t mutex_hdl, uint32_t msec)
@@ -115,7 +117,7 @@
 //--------------------------------------------------------------------+
 
 // role device/host is used by OS NONE for mutex (disable usb isr) only
-#define OSAL_QUEUE_DEF(_int_set, _name, _depth, _type) \
+#define OSAL_QUEUE_DEF(_role, _name, _depth, _type) \
   static _type _name##_##buf[_depth];\
   osal_queue_def_t _name = { .depth = _depth, .item_sz = sizeof(_type), .buf = _name##_##buf };
 
@@ -132,7 +134,8 @@
 
 static inline osal_queue_t osal_queue_create(osal_queue_def_t* qdef)
 {
-  return xQueueCreateStatic(qdef->depth, qdef->item_sz, (uint8_t*) qdef->buf, &qdef->sq);
+  //return xQueueCreateStatic(qdef->depth, qdef->item_sz, (uint8_t*) qdef->buf, &qdef->sq);
+  return xQueueCreate(qdef->depth, qdef->item_sz); //, (uint8_t*) qdef->buf, &qdef->sq);
 }
 
 static inline bool osal_queue_receive(osal_queue_t qhdl, void* data)
@@ -152,7 +155,6 @@
     BaseType_t res = xQueueSendToBackFromISR(qhdl, data, &xHigherPriorityTaskWoken);
 
 #if CFG_TUSB_MCU == OPT_MCU_ESP32S2 || CFG_TUSB_MCU == OPT_MCU_ESP32S3
-    // not needed after https://github.com/espressif/esp-idf/commit/c5fd79547ac9b7bae06fa660e9f814d18d3390b7
     if ( xHigherPriorityTaskWoken ) portYIELD_FROM_ISR();
 #else
     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
@@ -171,4 +173,4 @@
  }
 #endif
 
-#endif
+#endif /* _TUSB_OSAL_FREERTOS_H_ */
